pipeline {
    agent any

    environment {
        AWS_REGION = 'us-east-1'
        AWS_CREDENTIALS = credentials('aws-credentials') // The ID of your AWS credentials in Jenkins
        ECR_REPOSITORY = 'https://568406210619.dkr.ecr.us-east-1.amazonaws.com'
        EB_APP_NAME = 'simple-web-app'
        EB_ENV_NAME = 'dev'
        DOCKER_IMAGE_NAME = 'simple-web-app-img'
    }

    stages {
        stage('Fetch Code') {
            steps {
                echo 'Fetching code from GitHub repository...'
                // Fetch code from a GitHub repository
                git branch: 'main', url: 'https://github.com/worachai3/simple-python-webapp.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                echo 'Building Docker image...'
                // Build the Docker image from the Dockerfile in your repository
                script {
                    dockerImage = docker.build("${DOCKER_IMAGE_NAME}:${BUILD_NUMBER}")
                }
            }
        }

        stage('Push Docker Image to ECR') {
            steps {
                echo 'Pushing Docker image to ECR...'
                // Push the Docker image to Amazon ECR
                script {
                    docker.withRegistry('${ECR_REPOSITORY}', 'ecr:us-east-1:simple_web_app') {
                        dockerImage.push()
                    }
                }
            }
        }

        stage('Deploy to Elastic Beanstalk') {
            steps {
                echo 'Deploying containerized app to Elastic Beanstalk...'
                // Deploy your containerized app to Elastic Beanstalk
                withAWS(credentials: AWS_CREDENTIALS, region: AWS_REGION) {
                    sh "eb init -r $AWS_REGION -i $ECR_REPOSITORY -p docker $EB_APP_NAME --region $AWS_REGION"
                    sh "eb use $EB_ENV_NAME"
                    sh 'eb deploy'
                }
            }
        }
    }

    post {
        success {
            // Notify success
            echo 'Pipeline succeeded!'
        }
        failure {
            // Notify failure
            echo 'Pipeline failed!'
        }
    }
}
