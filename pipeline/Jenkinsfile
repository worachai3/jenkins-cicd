pipeline {
    agent any

    environment {
        AWS_REGION = 'us-east-1'
        ECR_REPOSITORY = '568406210619.dkr.ecr.us-east-1.amazonaws.com'
        EB_APP_NAME = 'simple-web-app'
        EB_ENV_NAME = 'dev'
        DOCKER_IMAGE_NAME = 'simple-web-app'
        AWS_ACCOUNT_ID = '568406210619'
    }

    stages {
        stage('Fetch Code') {
            steps {
                echo 'Fetching code from GitHub repository...'
                git branch: 'main', url: 'https://github.com/worachai3/simple-python-webapp.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                echo 'Building Docker image...'
                script {
                        if (!fileExists("${DOCKER_IMAGE_NAME}")) {
                            sh "docker build -t ${DOCKER_IMAGE_NAME} ."
                        }
                    }
                }
            }

        stage('Push Docker Image to ECR') {
            steps {
                echo 'Pushing Docker image to ECR...'
                script {
                    sh """aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_REPOSITORY}"""
                    sh """docker tag ${DOCKER_IMAGE_NAME} ${ECR_REPOSITORY}/${DOCKER_IMAGE_NAME}:${BUILD_NUMBER}"""
                    sh """docker push ${ECR_REPOSITORY}/${DOCKER_IMAGE_NAME}:${BUILD_NUMBER}"""
                }
            }
        }


        stage('Deploy to Elastic Beanstalk') {
            steps {
                echo 'Deploying containerized app to Elastic Beanstalk...'
                    sh "eb init -r ${AWS_REGION} -i ${ECR_REPOSITORY} -p docker ${EB_APP_NAME} --region ${AWS_REGION}"
                    sh "eb use ${EB_ENV_NAME}"
                    sh 'eb deploy'
                }
            }
        }
    }
    post {
        success {
            // Notify success
            echo 'Pipeline succeeded!'
        }
        failure {
            // Notify failure
            echo 'Pipeline failed!'
        }
    }
}

