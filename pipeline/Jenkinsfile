pipeline {
    agent any

    environment {
        AWS_REGION = 'us-east-1'
        ECR_REPOSITORY = 'https://568406210619.dkr.ecr.us-east-1.amazonaws.com'
        EB_APP_NAME = 'simple-web-app'
        EB_ENV_NAME = 'dev'
        DOCKER_IMAGE_NAME = 'simple-web-app-img'
    }

    stages {
        stage('Fetch Code') {
            steps {
                echo 'Fetching code from GitHub repository...'
                git branch: 'main', url: 'https://github.com/worachai3/simple-python-webapp.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                echo 'Building Docker image...'
                script {
                        def buildCmd = "docker build -t simple_web_app ."
                        if (!fileExists("simple_web_app")) {
                            sh buildCmd
                        }
                    }
                }
            }

        stage('Push Docker Image to ECR') {
            steps {
                echo 'Pushing Docker image to ECR...'
                script {
                    // Use the AWS credentials from Jenkins for Docker authentication
                    withCredentials([string(credentialsId: 'AWS_ACCESS_KEY_ID', variable: 'AWS_ACCESS_KEY_ID'),
                                    string(credentialsId: 'AWS_SECRET_ACCESS_KEY', variable: 'AWS_SECRET_ACCESS_KEY')]) {
                        // Set up an environment variable for the AWS secret access key
                        def awsSecretKey = env.AWS_SECRET_ACCESS_KEY

                        // Authenticate Docker with ECR using environment variable and --password-stdin
                        sh """
                        echo $awsSecretKey | docker login -u AWS --password-stdin https://${ECR_REPOSITORY}
                        """

                        // Build, tag, and push the Docker image as previously demonstrated
                    }
                }
            }
        }



        stage('Deploy to Elastic Beanstalk') {
            steps {
                echo 'Deploying containerized app to Elastic Beanstalk...'
                withAWS(credentials: AWS_CREDENTIALS, region: AWS_REGION) {
                    sh "eb init -r $AWS_REGION -i $ECR_REPOSITORY -p docker $EB_APP_NAME --region $AWS_REGION"
                    sh "eb use $EB_ENV_NAME"
                    sh 'eb deploy'
                }
            }
        }
    }

    post {
        success {
            // Notify success
            echo 'Pipeline succeeded!'
        }
        failure {
            // Notify failure
            echo 'Pipeline failed!'
        }
    }
}
